---
require:
  - rubocop-rspec
AllCops:
  Exclude:
  - 'test_app/**/*'
  - 'tmp/**/*'
  - vendor/**/*
  DisplayCopNames: true
  TargetRubyVersion: 2.2
# This ends up being too spammy
Style/Documentation:
  Enabled: false
Style/ExtraSpacing:
  AllowForAlignment: true
Metrics/LineLength:
  Max: 100
Metrics/BlockLength:
  Exclude:
  # Ignore migration DSL
  - db/migrations/**/*
  # Ignore RSpec DSL
  - spec/**/*
  # Ignore Rake task DSL
  - Rakefile
Style/IfUnlessModifier:
  MaxLineLength: 100
Style/Next:
  EnforcedStyle: always
Style/PercentLiteralDelimiters:
  PreferredDelimiters:
    '%i': '[]'
    '%I': '[]'
    '%q': '{}'
    '%Q': '{}'
    '%r': '{}'
    '%s': ()
    '%w': '[]'
    '%W': '[]'
    '%x': ()
Style/TrivialAccessors:
  ExactNameMatch: false
Style/SymbolArray:
  Enabled: true
Style/BarePercentLiterals:
  EnforcedStyle: percent_q
Style/CollectionMethods:
  Enabled: true
Style/Send:
  Enabled: true
Style/AutoResourceCleanup:
  Enabled: true
Style/FirstArrayElementLineBreak:
  Enabled: true
Style/FirstHashElementLineBreak:
  Enabled: true
Style/FirstMethodArgumentLineBreak:
  Enabled: true
Style/FirstMethodParameterLineBreak:
  Enabled: true
Style/MultilineArrayBraceLayout:
  Enabled: true
Style/MultilineAssignmentLayout:
  EnforcedStyle: new_line
  Enabled: true
Style/MultilineHashBraceLayout:
  Enabled: true
Style/MultilineMethodCallBraceLayout:
  Enabled: true
Style/MultilineMethodDefinitionBraceLayout:
  Enabled: true
Style/OptionHash:
  Enabled: true
Style/StringMethods:
  Enabled: true
Style/IndentArray:
  EnforcedStyle: consistent
Style/IndentHash:
  EnforcedStyle: consistent
MultilineMethodCallIndentation:
  EnforcedStyle: indented
Style/Alias:
  EnforcedStyle: prefer_alias_method
Style/AlignHash:
  EnforcedColonStyle: table
Style/SignalException:
  EnforcedStyle: semantic
Style/SingleLineBlockParams:
  Enabled: false
# We prefer being able to write
#
#   foo(*%w[bar baz qux norf hello goodbye])
#
# over
#
#   foo('bar', 'baz', 'qux', 'norf', 'hello', 'goodbye')
#
# because
#
#   1. the `%w` signals that all elements are strings without interpolation
#   2. the `%w` case is more compact
#
# The only exception is method invocations with a single argument. These
# cases should be `foo('bar')` and never `foo(*%w[bar])`
#
Lint/UnneededSplatExpansion:
  Enabled: false
# We only use guard clauses when it guards two or more statements:
#
#    # bad
#    def foo
#      return if bar
#
#      baz
#    end
#
#    # good
#    def foo
#      baz if bar
#    end
#
# This includes conditionals with an `else` branch:
#
#    # bad
#    def foo
#      return qux if bar
#
#      baz
#    end
#
#    # good
#    def foo
#      if bar
#        qux
#      else
#        baz
#      end
#    end
#
# It is up to the author of the code in question if the condition concerns
# exactly two statements
#
#    # ok
#    def foo
#      return if bar
#
#      baz
#      qux
#    end
#
#    # also ok
#    def foo
#      if bar
#        baz
#        qux
#      end
#    end
#
# Use a guard clause if more than two statements are being guarded by the conditional
#
#    # bad
#    def foo
#      if bar
#        baz
#        qux
#        norf
#      end
#    end
#
#    # good
#    def foo
#      return if bar
#
#      baz
#      qux
#      norf
#    end
Style/GuardClause:
  Enabled: false
# Prefer writing an empty method on two lines
#
#    # good
#    def foo
#    end
#
#    # bar
#    def foo; end
#
Style/EmptyMethod:
  EnforcedStyle: expanded
# RuboCop disables end alignment by default. Explanation:
#
#     The end alignment cops are in the Lint category because the bad
#     indentation could be something more serious than just a style issue.
#     It could be a mistake in which keyword you think you're matching with the end.
#     (ruby -w warns for these too, by the way.) So for this reason I don't think
#     we can add auto-correct for these cops.
#
# From https://github.com/bbatsov/rubocop/pull/1789#issuecomment-92308357
#
# I think we have more than enough tools that sound the alarms if we have
# such an obvious mistake like mismatched tokens.
#
#   - Our specs are likely to fail
#   - RuboCop will flag it regardless, it just doesn't autocorrect it by default
#   - Ruby will emit a warning which we configure to fail our specs
#
# So I think it is safe to enable autocorrect for end alignment cops because it
# does not seem unsafe and it improves workflow to be able to autocorrect alignment
Lint/DefEndAlignment:
  AutoCorrect: true
# See explanation for `Lint/DefEndAlignment`
Lint/EndAlignment:
  AutoCorrect: true

# TODO is inlined so that it takes precedence.

# This configuration was generated by
# `rubocop --auto-gen-config --exclude-limit 0`
# on 2017-01-27 00:08:49 -0800 using RuboCop version 0.47.1.
# The point is for the user to remove these configuration records
# one by one as the offenses are removed from the code base.
# Note that changes in the inspected code, or installation of new
# versions of RuboCop, may require this file to be generated again.

# Offense count: 1
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyleAlignWith, SupportedStylesAlignWith, AutoCorrect.
# SupportedStylesAlignWith: keyword, variable, start_of_line

# Offense count: 4
# Cop supports --auto-correct.
Lint/UnifiedInteger:
  Enabled: false

# Offense count: 10
Metrics/AbcSize:
  Max: 20

# Offense count: 84
# Configuration parameters: AllowHeredoc, AllowURI, URISchemes, IgnoreCopDirectives, IgnoredPatterns.
# URISchemes: http, https
Metrics/LineLength:
  Max: 120

# Offense count: 7
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: always, conditionals
Style/AndOr:
  Enabled: false

# Offense count: 150
# Cop supports --auto-correct.
Style/FirstMethodArgumentLineBreak:
  Enabled: false

# Offense count: 2
# Cop supports --auto-correct.
# Configuration parameters: SupportedStyles, IndentationWidth.
# SupportedStyles: special_inside_parentheses, consistent, align_braces
Style/IndentHash:
  EnforcedStyle: special_inside_parentheses

# Offense count: 21
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: call, braces
Style/LambdaCall:
  Enabled: false

# Offense count: 12
# Cop supports --auto-correct.
# Configuration parameters: EnforcedStyle, MinBodyLength, SupportedStyles.
# SupportedStyles: skip_modifier_ifs, always
Style/Next:
  Enabled: false

# RSpec Cops
RSpec/MessageExpectation:
  Enabled: true
RSpec/ExampleLength:
  Enabled: false
RSpec/VerifiedDoubles:
  IgnoreSymbolicNames: true

# Inlining RSpec todos for the same reason as the RSpec ones

# This configuration was generated by
# `rubocop --auto-gen-config`
# on 2017-01-27 19:41:43 -0800 using RuboCop version 0.47.1.
# The point is for the user to remove these configuration records
# one by one as the offenses are removed from the code base.
# Note that changes in the inspected code, or installation of new
# versions of RuboCop, may require this file to be generated again.

# Offense count: 2
RSpec/BeEql:
  Exclude:
    - 'spec/unit/mutest/cli_spec.rb'
    - 'spec/unit/mutest/reporter/sequence_spec.rb'

# Offense count: 5
RSpec/DescribeClass:
  Exclude:
    - 'spec/integration/mutest/corpus_spec.rb'
    - 'spec/integration/mutest/null_spec.rb'
    - 'spec/integration/mutest/rspec_spec.rb'
    - 'spec/integration/mutest/test_mutator_handles_types_spec.rb'
    - 'spec/unit/mutest/result/class_methods_spec.rb'

# Offense count: 3
# Configuration parameters: SkipBlocks.
RSpec/DescribedClass:
  Exclude:
    - 'spec/unit/mutest/cli_spec.rb'
    - 'spec/unit/mutest/context_spec.rb'
    - 'spec/unit/mutest/diff_spec.rb'

# Offense count: 89
# Configuration parameters: CustomIncludeMethods.
RSpec/EmptyExampleGroup:
  Exclude:
    - 'spec/unit/mutest/meta/example/dsl_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/config_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/env_progress_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/env_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/mutation_progress_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/mutation_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/status_progressive_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/status_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/subject_progress_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/subject_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/test_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer_spec.rb'
    - 'spec/unit/mutest/reporter/cli_spec.rb'

# Offense count: 6
# Configuration parameters: CustomTransform, IgnoredWords.
RSpec/ExampleWording:
  Exclude:
    - 'spec/unit/mutest/context_spec.rb'
    - 'spec/unit/mutest/integration/rspec_spec.rb'
    - 'spec/unit/mutest/mutator_spec.rb'

# Offense count: 13
# Configuration parameters: CustomTransform, IgnoreMethods.
RSpec/FilePath:
  Exclude:
    - 'spec/unit/mutest/loader_spec.rb'
    - 'spec/unit/mutest/matcher/chain_spec.rb'
    - 'spec/unit/mutest/matcher/compiler/subject_prefix_spec.rb'
    - 'spec/unit/mutest/matcher/compiler_spec.rb'
    - 'spec/unit/mutest/matcher/filter_spec.rb'
    - 'spec/unit/mutest/matcher/method/instance_spec.rb'
    - 'spec/unit/mutest/matcher/method/singleton_spec.rb'
    - 'spec/unit/mutest/matcher/methods/instance_spec.rb'
    - 'spec/unit/mutest/matcher/methods/singleton_spec.rb'
    - 'spec/unit/mutest/matcher/namespace_spec.rb'
    - 'spec/unit/mutest/matcher/null_spec.rb'
    - 'spec/unit/mutest/matcher/scope_spec.rb'
    - 'spec/unit/mutest/matcher/static_spec.rb'

# Offense count: 191
# Configuration parameters: SupportedStyles.
# SupportedStyles: is_expected, should
RSpec/ImplicitExpect:
  EnforcedStyle: should

# Offense count: 5
# Configuration parameters: AssignmentOnly.
RSpec/InstanceVariable:
  Exclude:
    - 'spec/unit/mutest/parallel/master_spec.rb'

# Offense count: 25
RSpec/LeadingSubject:
  Enabled: false

# Offense count: 93
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: allow, expect
RSpec/MessageExpectation:
  Enabled: false

# Offense count: 94
# Configuration parameters: SupportedStyles.
# SupportedStyles: have_received, receive
RSpec/MessageSpies:
  EnforcedStyle: receive

# Offense count: 2
RSpec/MultipleDescribes:
  Exclude:
    - 'spec/unit/mutest/integration_spec.rb'
    - 'spec/unit/mutest/subject/method/instance_spec.rb'

# Offense count: 5
RSpec/MultipleExpectations:
  Max: 3

# Offense count: 57
RSpec/NamedSubject:
  Enabled: false

# Offense count: 70
# Configuration parameters: Max.
RSpec/NestedGroups:
  Exclude:
    - 'spec/unit/mutest/ast/named_children_spec.rb'
    - 'spec/unit/mutest/cli_spec.rb'
    - 'spec/unit/mutest/expression/namespace/recursive_spec.rb'
    - 'spec/unit/mutest/mutation_spec.rb'
    - 'spec/unit/mutest/parallel/master_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/mutation_result_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/status_progressive_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer/status_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer_spec.rb'
    - 'spec/unit/mutest/reporter/cli_spec.rb'
    - 'spec/unit/mutest/repository/diff_spec.rb'
    - 'spec/unit/mutest/runner/sink_spec.rb'

# Offense count: 2
# Configuration parameters: EnforcedStyle, SupportedStyles.
# SupportedStyles: not_to, to_not
RSpec/NotToNot:
  Exclude:
    - 'spec/integration/mutest/isolation/fork_spec.rb'
    - 'spec/unit/mutest/repository/diff_spec.rb'

# Offense count: 4
RSpec/ScatteredSetup:
  Exclude:
    - 'spec/unit/mutest/integration/rspec_spec.rb'
    - 'spec/unit/mutest/runner_spec.rb'

# Offense count: 18
# Configuration parameters: IgnoreSymbolicNames.
RSpec/VerifiedDoubles:
  Exclude:
    - 'spec/unit/mutest/actor/binding_spec.rb'
    - 'spec/unit/mutest/integration/rspec_spec.rb'
    - 'spec/unit/mutest/reporter/cli/printer_spec.rb'
    - 'spec/unit/mutest/repository/subject_filter_spec.rb'
    - 'spec/unit/mutest/result/mutation_spec.rb'
    - 'spec/unit/mutest/subject/method/instance_spec.rb'
    - 'spec/unit/mutest/subject_spec.rb'
